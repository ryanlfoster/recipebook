{
  "name": "requirejs-glob",
  "main": "lib/glob.js",
  "version": "0.1.2",
  "ignore": [
    "lib/requirejs-glob",
    "package.json"
  ],
  "gitHead": "fb57bfd96ce736bf065579c0cf81aea90c3c0171",
  "readme": "#requirejs-glob\nA RequireJS plugin for loading multiple files that match a glob pattern.\n\n##Why\nMost of the time when using [RequireJS](http://requirejs.org/) you want to explicitly declare each file's dependencies. But there are certain situations where it would be more convenient to load a whole handful of files that have a flat dependency tree. For example when using [Angular](http://angularjs.org/) dependencies are \"injected\", so the order your controllers, services, templates etc. are loaded doesn't matter. For cases like these, the `glob!` plugin can be super useful:\n\n```js\nrequire([\n  'glob!controllers/**/*.js',\n  'glob!services/**/*.js',\n  'glob!filters/**/*.js',\n  'glob!directives/**/*.js',\n]);\n```\n\nNow as you develop your application all new matching files will be included automatically. Each file will also be inlined during the [r.js build](http://requirejs.org/docs/optimization.html).\n\n##How\nThe Browser environment has no way to find glob-matching files. So this plugin has a tiny server-side companion that runs during development only, listening for requests from the `glob!` plugin and returning lists of matching files. \n\nOne could accomplish something similar with a pre-run compile step like [Grunt](http://gruntjs.com/) or [Component](https://component.jit.su/), but part of the beauty of [RequireJS](http://requirejs.org/) is that it runs natively in the browser without the need for a build step. Most projects already use a webserver during development anyway. I like to think of this approach as \"JIT Compiled AMD\" plugin. \n\nThis piece is currently available as a [Connect](http://www.senchalabs.org/connect/) and [Express](http://expressjs.com/guide.html) compatible middleware.\n\n##Getting Started\nInstall the plugin with [Bower](http://twitter.github.com/bower/):\n`$ bower install requirejs-glob`\nor download [glob.js](lib/glob.js) manually.\n\nAdd `glob` to your paths config that points to wherever you installed the glob.js file:\n\n```js\nrequire.config({\n  paths: {\n    \"glob\": \"../components/requirejs-glob/lib/glob\"\n  }\n})\n``` \n\nAdd a `glob` setting to your RequireJS config, that will instruct the server-side piece where to start for the pattern matching:\n\n```js\nrequire.config({\n  glob: 'app/js/'\n})\n```\nIt should be the **full path** from the root of your project to the [baseUrl](http://requirejs.org/docs/api.html#config-baseUrl) where RequireJS looks to load your scripts from.\n\nInstall the [Node](http://nodejs.org/) companion with [npm](https://npmjs.org/):\n`$ npm install requirejs-glob`\n\nUse the requirejs-glob express middleware in your **development environment**:\n\n```js\napp.configure('development', function(){\n  //use requirejs-glob middleware\n  app.use(require('requirejs-glob')());\n});\n```\n\nOnce you're all setup you can use the plugin:\n\n```js\nrequire(['glob!controllers/**/*.js'], function(){});\n``` \n\nEnjoy!\n\n##Grunt integration\n\nThe middleware can also be used as part of a [Grunt][] build, where the web server\nis created with the [grunt-contrib-connect][] task.  To do this, the grunt\ntask must be configured with custom middleware.\n\nFor a registered task named `connect:server`, where compiled files are placed\nin the `generated` directory, use the [middleware][] configuration option to\nload support for the requirejs glob middleware.\n\n```javascript\nconnect: {\n  server: {\n    options: {\n      base: \"generated\",\n      middleware: function(connect, options) {\n        // Return array of whatever middlewares you want\n        return [\n          require('requirejs-glob')(),\n          // standard middleware for static files and dir browsing\n          connect.static(options.base),\n          connect.directory(options.base)\n        ];\n      }\n    }\n  }\n}\n```\n\n[Grunt]: http://gruntjs.com/\n[grunt-contrib-connect]: https://github.com/gruntjs/grunt-contrib-connect\n[middleware]: https://github.com/gruntjs/grunt-contrib-connect#middleware\n\n##License\nMIT\n\n##TODO\n[] consider standalone for non-node backends\n[] tests\n[] examples\n",
  "readmeFilename": "README.md",
  "_id": "requirejs-glob@0.1.1",
  "description": "A RequireJS plugin for loading multiple files that match a glob pattern.",
  "repository": {
    "type": "git",
    "url": "git://github.com/OpenWebStack/requirejs-glob"
  }
}